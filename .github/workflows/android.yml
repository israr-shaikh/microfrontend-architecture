name: Android CI and CD

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'    

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.9.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format

      - name: Run ESLint
        run: npm run lint:fix

      - name: Run Unit Tests
        run: npm run test

      - name: Send Teams notification on failure
        if: failure() || cancelled()
        run: |
          curl -H "Content-Type: application/json" \
                -d '{
                "@type": "MessageCard",
                "@context": "https://schema.org/extensions",
                "summary": "Notification",
                "themeColor": "FF0000",
                "title": "ðŸš€ Lint and test status",
                "text": "ðŸš¨ CI/CD Build Failed! Error logs: Testing / Linting / Prettier Failed!"
                }' \
                ${{ secrets.TEAMSWEBHOOK }}

      - name: Send Teams notification on success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
                -d '{
                "@type": "MessageCard",
                "@context": "https://schema.org/extensions",
                "summary": "Notification",
                "themeColor": "0076D7",
                "title": "ðŸš€ Lint and test status",
                "text": "âœ… Testing Passed"
                }' \
                ${{ secrets.TEAMSWEBHOOK }}

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    env:
      GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ vars.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
           node-version: '22.9.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Fastlane
        run: sudo gem install fastlane -NV 

      - name: Deploy to Google Play Store
        run: |
          printf '%s' "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" > android/fastlane/google_service_account.json
          cd android
          fastlane playstore

      - name: Send Teams notification on failure
        if: failure() || cancelled()
        run: |
          curl -H "Content-Type: application/json" \
                -d '{
                "@type": "MessageCard",
                "@context": "https://schema.org/extensions",
                "summary": "Notification",
                "themeColor": "FF0000",
                "title": "ðŸš€ Android App deployment status",
                "text": "ðŸš¨ Deployment Failed! Error logs:Fast Lane Service Failed"
                }' \
                ${{ secrets.TEAMSWEBHOOK }}

      - name: Send Teams notification on success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
                -d '{
                "@type": "MessageCard",
                "@context": "https://schema.org/extensions",
                "summary": "Notification",
                "themeColor": "0076D7",
                "title": "ðŸš€ Android App deployment status",
                "text": "âœ… Deployed To Play Store ðŸŽ‰!"
                }' \
                ${{ secrets.TEAMSWEBHOOK }}
