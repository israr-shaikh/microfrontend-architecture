name: iOS CI and CD

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  testflight:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      - name: Set up Bundler
        run: gem install bundler

      - name: Install Fastlane
        run: gem install fastlane

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.9.0'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ios/Podfile.lock
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install

      # - name: Run iOS Unit Tests
      #   run: |
      #     cd ios
      #     xcodebuild test -workspace MicrofrontendApp.xcworkspace -scheme MicrofrontendApp -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest'

      - name: Decode App Store Connect API Key
        env:
          APP_STORE_CONNECT_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_KEY_BASE64 }}
        run: |
          echo "$APP_STORE_CONNECT_KEY_BASE64" | base64 --decode > ios/fastlane/AuthKey_P35FX53X5A.p8

      # - name: Fastlane Match (App Store)
      #   run: |
      #     cd ios
      #     fastlane match appstore --readonly

      # - name: Fastlane Match (Development)
      #   run: |
      #     cd ios
      #     fastlane match development --readonly

      - name: Set up SSH for Match
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MATCH_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Build and Upload to TestFlight
        env:
          APP_STORE_CONNECT_KEY_ID: P35FX53X5A
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_PATH: ios/fastlane/AuthKey_P35FX53X5A.p8
        run: |
          cd ios
          fastlane release

      - name: Clean up API Key
        run: rm -f ios/fastlane/AuthKey_P35FX53X5A.p8

      - name: Send Teams notification on failure
        if: failure() || cancelled()
        run: |
          curl -H "Content-Type: application/json" \
                -d '{
                "@type": "MessageCard",
                "@context": "https://schema.org/extensions",
                "summary": "Notification",
                "themeColor": "FF0000",
                "title": "ðŸš€ iOS App deployment status",
                "text": "ðŸš¨ Deployment Failed! Error logs:Fast Lane Service Failed"
                }' \
                ${{ secrets.TEAMSWEBHOOK }}

      - name: Send Teams notification on success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
                -d '{
                "@type": "MessageCard",
                "@context": "https://schema.org/extensions",
                "summary": "Notification",
                "themeColor": "0076D7",
                "title": "ðŸš€ iOS App deployment status",
                "text": "âœ… Deployed To TestFlight ðŸŽ‰!"
                }' \
                ${{ secrets.TEAMSWEBHOOK }}