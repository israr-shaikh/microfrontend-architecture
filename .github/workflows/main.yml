name: CI and CD

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'    

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.9.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format

      - name: Run ESLint
        run: npm run lint:fix

      - name: Run Unit Tests
        run: npm run test

      - name: Send Teams notification on failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "ðŸš¨ CI/CD Build Failed! Error logs: Testing / Linting / Prettier Failed!"}' \
               ${{ secrets.TEAMSWEBHOOK }}

      - name: Send Teams notification on success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "âœ… Testing Passed"}' \
               ${{ secrets.TEAMSWEBHOOK }}

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
           node-version: '22.9.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Fastlane
        run: sudo gem install fastlane -NV 

      - name: Deploy to Google Play Store
        run: |
          echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" > google_service_account.json.b64
          base64 -d -i google_service_account.json.b64 > android/fastlane/google_service_account.json
          cd android
          fastlane playstore

      - name: Send Teams notification on failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "ðŸš¨ Deployment Failed! Error logs:Fast Lane Service Failed"}' \
               ${{ secrets.TEAMSWEBHOOK }}

      - name: Send Teams notification on success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "âœ… Deployed To Play Store ðŸŽ‰!"}' \
               ${{ secrets.TEAMSWEBHOOK }}
